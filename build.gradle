plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

ext {
    jjwtVersion = '0.6.0'
    mapStructVersion = '1.3.1.Final'
    validationVersion = '2.0.1.Final'
    swagger2Version = '2.9.2'
    swagger2ModelsAndAnotationsVersion = '1.5.21'
    dataCommonsVersion = '2.4.5'
    commonsLang3Version = '3.12.0'
}

group = 'ru.inurgalimov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation "javax.validation:validation-api:${validationVersion}"
    implementation "org.springframework.data:spring-data-commons:${dataCommonsVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swagger2Version}"
    implementation("io.springfox:springfox-swagger2:${swagger2Version}") {
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'io.swagger', module: 'swagger-models'
    }
    implementation "io.swagger:swagger-annotations:${swagger2ModelsAndAnotationsVersion}"
    implementation "io.swagger:swagger-models:${swagger2ModelsAndAnotationsVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
}

test {
    useJUnitPlatform()
}
